<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.puppyroad.app.schedule.mapper.ScheduleMapper">
	<select id="ScheduleList" resultType="ScheduleVO"
		parameterType="ScheduleVO">
		SELECT  s.WALK_TIME,
				m.name,
				p.DOG_NAME,
				mb.start_time,
				mb.end_time,
				s.WALK_FARE,
				s.address,
				m.phone,
				s.walk_path,
				s.APPROVAL_STATE,
				w.work_week,
				w.work_time,
				s.holiday_start,
				s.holiday_end,
				s.schedule_title,
				s.client_name
		FROM    schedule s JOIN walker_add_info w
			 			     ON s.walker_code = w.member_code
					       LEFT JOIN puppy p
					         ON s.puppy_name = p.dog_name
			               JOIN matching_board mb
			                 ON s.walker_code = mb.writer
			               LEFT JOIN member m
			                 ON s.client_name = m.name
		WHERE s.walker_code = #{walkerCode}
	</select>
	<update id="ScheduleUpdate" >
	
	UPDATE  schedule
	SET 	holiday_start = #{holidayStart} ,
	    	holiday_end = #{holidayEnd} ,
	    	schedule_title = #{scheduleTitle}
	WHERE   walker_code = #{walkerCode}
	
	</update>
	<insert id="ScheduleInsert">
		<selectKey keyProperty="scheduleCode" order="BEFORE"
			resultType="string">
			    SELECT to_char(nvl(max(to_number(schedule_code)), 0) + 1) as schedule_code
		    	FROM schedule
		</selectKey>
	insert into schedule
		(
			schedule_code, 
			walker_code, 
			holiday_start, 
			holiday_end
		)
	values 
		(
			#{scheduleCode}, 
			#{walkerCode}, 
			#{holidayStart}, 
			#{holidayEnd}
		)
	</insert>
	
	<select id="payList" resultType="ScheduleVO">
		SELECT 
		    SUM(price) AS total_price,
		    NEXT_DAY(purchased_at, 'FRIDAY') AS next_friday,
		    NEXT_DAY(purchased_at-7, 'MONDAY') as monday,
		    NEXT_DAY(purchased_at, 'SUNDAY') as sunday 
		FROM 
		    payment
		WHERE 
            recipient = #{recipient} and
		    purchased_at BETWEEN NEXT_DAY(purchased_at-7, 'MONDAY') 
		                     AND NEXT_DAY(purchased_at, 'SUNDAY')
		GROUP BY 
		   NEXT_DAY(purchased_at, 'FRIDAY'),
		   NEXT_DAY(purchased_at-7, 'MONDAY'),
		   NEXT_DAY(purchased_at, 'SUNDAY') 
	</select>
	


</mapper>