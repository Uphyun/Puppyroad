<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.puppyroad.app.admin.manage.mapper.ManageMemberMapper">

	<select id="getWalkerCnt" resultType="int">
		select count(1)
		from
		walker_add_info
		where approval_state = 3
	</select>

	<select id="selectMemberList" resultType="MemberVO">
		select  b.*
		from    (
		        select  rownum rn
		                , a.*
		        from    (
		                select member_code
		                        , user_id
		                        , nickname
		                        , join_date
		                        , activity_date
		                        , withdraw_date
		                        , account_state
		                from member
		                where position = #{memberVO.position}
						<choose>
							<when test="condition == '아이디'">
								and	user_id like '%' || #{memberVO.userId} || '%'
							</when>
							<when test="condition == '닉네임'">
								and nickname like '%' || #{memberVO.nickName} || '%'
							</when>
							<otherwise>
								and (user_id like '%' || #{memberVO.userId} || '%'
								or	nickname like '%' || #{memberVO.nickName} || '%')
							</otherwise>
						</choose>
		                order by join_date desc
		                ) a
		        <![CDATA[
		        where   rownum <= (#{pageDTO.page} * #{pageDTO.recordSize})
		        ]]>
		        ) b
		where   b.rn > #{pageDTO.offset}
	</select>
	
	<select id="selectMemberCnt">
		select	count(*)
		from	member
		where	position = #{memberVO.position}
		<choose>
			<when test="condition == '아이디'">
				and	user_id like '%' || #{memberVO.userId} || '%'
			</when>
			<when test="condition == '닉네임'">
				and nickname like '%' || #{memberVO.nickName} || '%'
			</when>
			<otherwise>
				and (user_id like '%' || #{memberVO.userId} || '%'
				or	nickname like '%' || #{memberVO.nickName} || '%')
			</otherwise>
		</choose>
	</select>
	

	
	<resultMap type="MemberVO" id="adminMemberInfo">
	    <id column="member_code" property="memberCode"/>
		<collection property="puppyList" javaType="java.util.ArrayList" column="member_code" ofType="PuppyVO" select="selectPuppyOfMemberInfo" />
	</resultMap>

	<select id="selectMemberInfo" resultMap="adminMemberInfo">
		select 	member_code
				, user_id
				, nickname
				, name
				, phone
				, email
				, address
				, join_date
				, activity_date
				, withdraw_date
				, account_state
				, intention
		from member
		where member_code = #{memberCode}
	</select>
	
	<select id="selectPuppyOfMemberInfo" resultType="PuppyVO">
		select	puppy_code
				, picture
				, dog_name
				, dog_breed
				, gender
				, age
				, neutralization_pre_abs
				, disease_pre_abs
				, note
		from	puppy
		where	client_user_id = #{memberCode}
	</select>
	
	<select id="selectSearchMemberList" resultType="MemberVO">
		select member_code
				, user_id
				, nickname
				, join_date
				, activity_date
				, withdraw_date
				, account_state
		from	member
		where	position = '의뢰인'
		<choose>
			<when test="condition == '아이디'">
				and	user_id like '%' || #{memberVO.userId} || '%'
			</when>
			<when test="condition == '닉네임'">
				and nickname like '%' || #{memberVO.nickName} || '%'
			</when>
			<otherwise>
				and (user_id like '%' || #{memberVO.userId} || '%'
				or	nickname like '%' || #{memberVO.nickName} || '%')
			</otherwise>
		</choose>
		order by join_date desc
	</select>
	
	<update id="updateAccountState" parameterType="MemberVO">
		update	member
		set		account_state = #{accountState}
		where	member_code = #{memberCode}
	</update>
</mapper>